/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Vista;
import Controlador.UsuarioControlador;
import Modelo.Usuario;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.property.TextAlignment;
import com.itextpdf.layout.property.UnitValue;
import java.awt.FileDialog;
import javax.swing.JOptionPane;
/**
 *
 * @author YALESKA
 */
public class VistaUsuarios extends javax.swing.JPanel {
    private final UsuarioControlador usuarioControlador;
    private Integer idUsuarioSeleccionado = null;
    /**
     * Creates new form VistaUsuario
     */
    public VistaUsuarios() {
        initComponents();
        this.usuarioControlador = new UsuarioControlador();
        cargarDatosTabla();
    }

     public void cargarDatosTabla() {
        //Obtener todas las categorias del controlador
        List<Usuario> usuarios = usuarioControlador.obtenerTodosUsuarios();
        if (usuarios != null) {
            // obtener el modelo existente de la tabla
            DefaultTableModel model = (DefaultTableModel) tablaUsuario.getModel();
            model.setRowCount(0);
            //llenar las filas con los datos de categorias  
            for (Usuario usu : usuarios) {
                Object[] row = {
                    usu.getIdUsuario(),
                    usu.getUsuario(),
                    usu.getContrasena()
                };
                model.addRow(row);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnActualizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaUsuario = new javax.swing.JTable();
        btnGuardar = new javax.swing.JButton();
        Buscar = new javax.swing.JButton();
        textBuscarUsuario = new javax.swing.JTextField();
        btnEliminar = new javax.swing.JButton();
        jlabel1 = new javax.swing.JLabel();
        textusuario = new javax.swing.JTextField();
        jlabel2 = new javax.swing.JLabel();
        textcontraseña = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 204, 204));

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accionbtnActualizar(evt);
            }
        });

        tablaUsuario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "idUsuario", "usuario", "Contraseña"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaUsuarioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaUsuario);

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accionbtnGuardar(evt);
            }
        });

        Buscar.setText("Buscar");
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });

        textBuscarUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                textbuscarUsuarioKeyTyped(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accionbtnEliminar(evt);
            }
        });

        jlabel1.setText("usuario");

        textusuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textusuarioActionPerformed(evt);
            }
        });

        jlabel2.setText("contraseña");

        textcontraseña.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textcontraseñaActionPerformed(evt);
            }
        });

        jButton1.setText("Generar Reportes");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accionBotonGenerarReporte(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(textBuscarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(textusuario, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(textcontraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(94, 94, 94)
                                .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 47, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textcontraseña, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textusuario, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textBuscarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void accionbtnActualizar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accionbtnActualizar
         String usuario = textusuario.getText();
        String contraseña = textcontraseña.getText();
        
        if (idUsuarioSeleccionado != null && !usuario.isEmpty()&& !contraseña.isEmpty()) {
            usuarioControlador.actualizarUsuario(idUsuarioSeleccionado, usuario, contraseña);
            cargarDatosTabla();
            
             textusuario.setText("");
            textcontraseña.setText("");
            idUsuarioSeleccionado = null;
            
            btnEliminar.setEnabled(true);
            btnGuardar.setEnabled(true);
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "por favor, llene todos los campos.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            
        }
    }//GEN-LAST:event_accionbtnActualizar

    private void accionbtnGuardar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accionbtnGuardar
        String usuario =textusuario.getText();
        String contraseña = textcontraseña.getText();
        
       
        if (!usuario.isEmpty() && !contraseña.isEmpty()) {
            usuarioControlador.crearUsuario(usuario, contraseña);
            cargarDatosTabla();
            textusuario.setText("");
            textcontraseña.setText("");
            
        } else {            
            javax.swing.JOptionPane.showMessageDialog(this, "por favor, llene todos los campos.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_accionbtnGuardar

    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BuscarActionPerformed

    private void accionbtnEliminar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accionbtnEliminar
       int filaSelecionada = tablaUsuario.getSelectedRow();
        if (filaSelecionada != -1) {
            int idUsuario = (int) tablaUsuario.getValueAt(filaSelecionada, 0);
            usuarioControlador.eliminarUsuario(idUsuario);
            cargarDatosTabla();
                    } else {

            javax.swing.JOptionPane.showMessageDialog(this, "Selecciona una fila para eliminar.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_accionbtnEliminar

    private void textusuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textusuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textusuarioActionPerformed

    private void textcontraseñaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textcontraseñaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textcontraseñaActionPerformed

    private void tablaUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaUsuarioMouseClicked
        if (evt.getClickCount() == 2) {
            
            int filaSelecionada = tablaUsuario.getSelectedRow();
            
            if (filaSelecionada != -1) {
                idUsuarioSeleccionado = (int) tablaUsuario.getValueAt(filaSelecionada, 0);
                String usuario = (String) tablaUsuario.getValueAt(filaSelecionada, 1);
                String contraseña = (String) tablaUsuario.getValueAt(filaSelecionada, 2);
                
                textusuario.setText(usuario);
                textcontraseña.setText(contraseña);
                
                btnEliminar.setEnabled(false);
                btnGuardar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_tablaUsuarioMouseClicked

    private void textbuscarUsuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textbuscarUsuarioKeyTyped
        String textoBusqueda = textBuscarUsuario.getText().trim().toLowerCase();
        List<Usuario> usuarios = usuarioControlador.obtenerTodosUsuarios();
        
        DefaultTableModel modelo = (DefaultTableModel) tablaUsuario.getModel();
        modelo.setRowCount(0);
        
        if (usuarios != null) {
            for (Usuario cat : usuarios) {
                if (textoBusqueda.isEmpty()|| 
                   cat.getUsuario().toLowerCase().contains(textoBusqueda)||
                   cat.getContrasena().toLowerCase().contains(textoBusqueda)){  
                         Object[] fila = {
                        cat.getIdUsuario(),
                        cat.getUsuario(),
                        cat.getContrasena()
                    };
                    modelo.addRow(fila);
                }
            }
        }        
    }//GEN-LAST:event_textbuscarUsuarioKeyTyped

    private void accionBotonGenerarReporte(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accionBotonGenerarReporte
        // TODO add your handling code here:
       try {
            FileDialog dialogoArchivo = new FileDialog((java.awt.Frame) null, "Guardar Reporte PDF",FileDialog.SAVE);
            dialogoArchivo.setFile("ReportesUsuarios.pdf");
            dialogoArchivo.setVisible(true);
            
        String ruta = dialogoArchivo.getDirectory();
        String nombreArchivo = dialogoArchivo.getFile();
        
        if (ruta == null ||nombreArchivo == null){
            JOptionPane.showMessageDialog(this, "operacion cancelada", "informacion",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        String rutaCompleta = ruta + nombreArchivo;
        
        PdfWriter escritor = new PdfWriter(rutaCompleta);
        PdfDocument pdf= new PdfDocument(escritor);
        Document documento = new Document(pdf);
        
        documento.add(new Paragraph("Reportes de Usuarios")
        .setTextAlignment(TextAlignment.CENTER)
        .setFontSize(20)
        .setBold());
        
        documento.add(new Paragraph("Fecha:" + new java.util.Date().toString())
        .setTextAlignment(TextAlignment.CENTER)
        .setFontSize(12));
        
        Table tabla = new Table(3);
        tabla.setWidth(UnitValue.createPercentValue(100));
        tabla.addHeaderCell("ID Usuario").setBold();
        tabla.addHeaderCell("Usuario").setBold();
        tabla.addHeaderCell("Contraseña").setBold();
        
        List<Usuario> listaUsuarios =
        usuarioControlador.obtenerTodosUsuarios();
        if (listaUsuarios != null){
            for (Usuario categoria : listaUsuarios){
                tabla.addCell(String.valueOf(categoria.getIdUsuario()));
                tabla.addCell(String.valueOf(categoria.getUsuario()));
                tabla.addCell(String.valueOf(categoria.getContrasena()));
            }
        }
        documento.add(tabla);
        
        documento.add(new Paragraph("Notas: Reportes generado automaticamente desde el sistema.")
        .setFontSize(10)
        .setMarginTop(20));
        
        documento.close();
        
        JOptionPane.showMessageDialog(
                    this,
                "Reporte pdf generado con exito en:" + rutaCompleta,
                "Exito", JOptionPane.INFORMATION_MESSAGE);
        
        }catch (Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(
                    this,
                    "Error al Generar el PDF:" + e.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE );
        }

    }//GEN-LAST:event_accionBotonGenerarReporte


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Buscar;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jlabel1;
    private javax.swing.JLabel jlabel2;
    private javax.swing.JTable tablaUsuario;
    private javax.swing.JTextField textBuscarUsuario;
    private javax.swing.JTextField textcontraseña;
    private javax.swing.JTextField textusuario;
    // End of variables declaration//GEN-END:variables
}
